{"version":3,"sources":["components/Forms/Form.module.css","components/Todolist/Todolist.module.css","components/Filter/Filter.module.css","redux/app/operation.js","components/Forms/Form.js","redux/app/app-phonebook-selector.js","components/Todolist/Todolist.js","redux/app/app-phonebook-actions.js","components/Filter/Filter.js","pages/Phonebook.js","pages/Home.js","pages/Login.js","pages/Register.js","routs/PublicRout.js","routs/PrivateRout.js","App.js","redux/app/app-phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","fetchContact","query","providesTags","result","map","type","id","addContacts","mutation","newContact","url","method","body","invalidatesTags","deleteContacts","useFetchContactQuery","useAddContactsMutation","useDeleteContactsMutation","Form","contact","useState","name","setName","number","setNumber","association","setAssociation","onSubmit","e","preventDefault","repeatName","reduce","acc","cont","repeatNumber","phone","includes","alert","className","s","m","title","form__name","onChange","currentTarget","value","pattern","required","form__number","radio__btn","checked","getFilter","state","filter","Todolist","isDeleting","isLoading","useSelector","contasts","setContacts","useEffect","optimizedFilter","toLowerCase","error","contacts__list","item","name__contact","btn","onClick","changeFilter","createAction","Filter","dispatch","useDispatch","label","input","event","target","Phonebook","contactApi","data","Home","Login","Register","PublicRoute","isAuth","Component","component","PrivateRoute","App","to","path","element","createReducer","_","payload","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.441f80f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__2kgGj\",\"title\":\"Form_title__2fXiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"Todolist_contacts__list__4zDXX\",\"item\":\"Todolist_item__2uJZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__JiAEW\",\"input\":\"Filter_input__3d3ET\"};","// import axios from 'axios';\n// import { configureStore } from '@reduxjs/toolkit';\n// import { setupListeners } from '@reduxjs/toolkit/query';\n// import { phonebookReducer } from './app-phonebook-reducer';\n\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n// import {\n//   getContactsRequest,\n//   getContactsSuccess,\n//   getContactsError,\n//   addContactsRequest,\n//   addContactsSuccess,\n//   addContactsError,\n//   deleteContactsRequest,\n//   deleteontactsSuccess,\n//   deleteContactsError,\n// } from './operatin';\n\n// axios.get('https://61935e66d3ae6d0017da850e.mockapi.io/contacts');\n\n//youtu.be/xJ2cgRkR8D0?t=4941\n//redux-toolkit.js.org/rtk-query/api/createApi\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  tagTypes: ['Contacts'],\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61935e66d3ae6d0017da850e.mockapi.io/',\n  }),\n  endpoints: builder => ({\n    fetchContact: builder.query({\n      query: () => `/contacts`,\n      providesTags: result =>\n        result\n          ? [\n              ...result.map(({ id }) => ({ type: 'Contacts', id })),\n              { type: 'Contacts', id: 'LIST' },\n            ]\n          : [{ type: 'Contacts', id: 'LIST' }],\n    }),\n    addContacts: builder.mutation({\n      query: newContact => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: { ...newContact },\n      }),\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\n    }),\n    deleteContacts: builder.mutation({\n      query: id => ({\n        url: `contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactQuery,\n  useAddContactsMutation,\n  useDeleteContactsMutation,\n} = contactsApi;\n","import { useState } from 'react';\nimport s from './Form.module.css';\nimport { useAddContactsMutation } from '../../redux/app/operation';\n\nfunction Form({ contact }) {\n  const [addContacts] = useAddContactsMutation();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [association, setAssociation] = useState('Other');\n\n  const handleSabmit = e => {\n    e.preventDefault();\n\n    const repeatName = contact.reduce((acc, cont) => [...acc, cont.name], []);\n    const repeatNumber = contact.reduce(\n      (acc, cont) => [...acc, cont.phone],\n      [],\n    );\n\n    if (repeatName.includes(name) || repeatNumber.includes(number)) {\n      alert(`${name}  ${number} is already `);\n      return;\n    }\n\n    if (repeatName.includes(name)) {\n      alert(`${name}  is already `);\n      return;\n    }\n    if (name === '' || number === '') {\n      alert(`Enter data`);\n      return;\n    }\n    let phone = number;\n    const newContact = { name, phone, association };\n    addContacts(newContact);\n    // onSubmit(name, number, association);\n    setName('');\n    setNumber('');\n    setAssociation('Other');\n    //Дизпачим продукет в редакс\n  };\n\n  return (\n    <form onSubmit={handleSabmit} className={s.m}>\n      <h2 className={s.title}>Phonebook</h2>\n      <label className={s.form__name}>\n        Name\n        <input\n          // id={this.contactIdName}\n          onChange={e => setName(e.currentTarget.value)}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.form__number}>\n        Number\n        <input\n          // id={this.contactIdNumber}\n          onChange={e => setNumber(e.currentTarget.value)}\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <div className={s.radio__btn}>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Work\"\n            onChange={e => setAssociation(e.currentTarget.value)}\n            checked={association === 'Work'}\n          />\n          Work\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Family\"\n            onChange={e => setAssociation(e.currentTarget.value)}\n            checked={association === 'Family'}\n          />\n          Family\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Friends\"\n            onChange={e => setAssociation(e.currentTarget.value)}\n            checked={association === 'Friends'}\n          />\n          Friends\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Other\"\n            onChange={e => setAssociation(e.currentTarget.value)}\n            checked={association === 'Other'}\n          />\n          Other\n        </label>\n      </div>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\n\nexport default Form;\n","// export const getContacts = state => state.contacts.contact;\nexport const getFilter = state => state.getFilter.filter;\n\n// export const getVisibleContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n//   const optimizedFilter = filter.toLowerCase();\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(optimizedFilter),\n//   );\n// };\n","import s from './Todolist.module.css';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/app/app-phonebook-selector';\nimport { useDeleteContactsMutation } from '../../redux/app/operation';\nimport { useState, useEffect } from 'react';\n\nfunction Todolist({ contact }) {\n  const [deleteContacts, { isLoading: isDeleting }] =\n    useDeleteContactsMutation();\n  const value = useSelector(getFilter);\n  const [contasts, setContacts] = useState([]);\n  useEffect(() => {\n    const optimizedFilter = value.toLowerCase();\n    try {\n      setContacts(\n        contact.filter(({ name }) =>\n          name.toLowerCase().includes(optimizedFilter),\n        ),\n      );\n    } catch (error) {\n      return error;\n    }\n  }, [contact, value]);\n\n  return (\n    <ul className={s.contacts__list}>\n      {contasts.map(({ id, name, phone, association }) => {\n        return (\n          <li key={id} className={s.item}>\n            {' '}\n            <p className={s.name__contact}>\n              Association: {association} | <span> name: {name} | </span>\n              <span>number: {phone} |</span>\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => deleteContacts(id)}\n            >\n              {' '}\n              {isDeleting ? 'Deleting...' : 'Delete'}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nexport default Todolist;\n\n// Todolist.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = state => {\n//   const { filter } = state;\n//   const optimizedFilter = filter.toLowerCase();\n//   const vizibleCOntacts = state.contact.filter(contact =>\n//     contact.name.toLowerCase().includes(optimizedFilter),\n//   );\n\n//   return { contactsOll: vizibleCOntacts };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onDeleteContact: id => dispatch(deleteContacts(id)),\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Todolist);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/value');\n","// import { connect } from 'react-redux';\nimport s from './Filter.module.css';\n// import PropTypes from 'prop-types';\nimport { changeFilter } from '../../redux/app/app-phonebook-actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/app/app-phonebook-selector';\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const onChange = event => dispatch(changeFilter(event.target.value));\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","// import { Component } from 'react';\nimport Form from '../components/Forms/Form';\nimport TodoList from '../components/Todolist/Todolist';\nimport Filter from '../components/Filter/Filter';\nimport { useFetchContactQuery } from '../redux/app/operation';\n\nfunction Phonebook() {\n  const { data: contactApi } = useFetchContactQuery();\n  return (\n    <div>\n      <Form contact={contactApi} />\n      <Filter contact={contactApi} />\n      {/* <TodoList contact={contactApi} /> */}\n      {contactApi && <TodoList contact={contactApi} />}\n    </div>\n  );\n}\n\nexport default Phonebook;\n","export function Home() {\n  return (\n    <>\n      <h2>HOMPAGE</h2>\n    </>\n  );\n}\n","// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { loginThunk } from '../redux/thunks';\nexport function Login() {\n  return (\n    <>\n      <h2>Login Form</h2>\n    </>\n  );\n}\n// \"name\": \"Adrian Cross\",\n//   \"email\": \"across@mail.com\",\n//   \"password\": \"examplepassword\"\n","// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { registerThunk } from '../redux/thunks';\nexport function Register() {\n  //   const [name, setName] = useState('');\n  //   const [email, setEmail] = useState('');\n  //   const [password, setPassword] = useState('');\n  //   const dispatch = useDispatch();\n  //   const handleChange = e => {\n  //     switch (e.target.name) {\n  //       case 'name':\n  //         setName(e.target.value);\n  //         break;\n  //       case 'email':\n  //         setEmail(e.target.value);\n  //         break;\n  //       case 'password':\n  //         setPassword(e.target.value);\n  //         break;\n  //       default:\n  //         alert(`Check input name please`);\n  //     }\n  //   };\n  //   const handlSubmit = e => {\n  //     e.preventDefault();\n  //     const user = { name, email, password };\n  //     dispatch(registerThunk(user));\n  //     reset();\n  //   };\n  //   const reset = () => {\n  //     setName('');\n  //     setEmail('');\n  //     setPassword('');\n  //   };\n\n  return (\n    <>\n      <h2>Register Form</h2>\n      {/* <form onSubmit={handlSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"name\"\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          type=\"mail\"\n          name=\"email\"\n          value={email}\n          placeholder=\"email\"\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={handleChange}\n        />\n        <br />\n        <button type=\"submit\">add</button>\n      </form> */}\n    </>\n  );\n}\n// \"name\": \"Adrian Cross\",\n//   \"email\": \"across@mail.com\",\n//   \"password\": \"examplepassword\"\n","// import { Navigate } \"react-router-dom\";\nexport function PublicRoute({ isAuth, component: Component }) {\n  return (\n    <>\n      <h1> PublicRoute</h1>\n      {/* {isAuth? </Navigate> :<Component/>} */}\n      <Component />\n    </>\n  );\n}\n","export function PrivateRoute({ isAuth, component: Component }) {\n  return (\n    <>\n      <h1> PrivateRoute</h1>;\n      <Component />\n    </>\n  );\n}\n","// import { Component } from 'react';\nimport { Link, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Phonebook from './pages/Phonebook';\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Login';\nimport { Register } from './pages/Register';\nimport { PublicRoute } from './routs/PublicRout';\nimport { PrivateRoute } from './routs/PrivateRout';\nconst isAuth = false;\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/phonebook\">Phonebook</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/register\">Register</Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <main>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<PrivateRoute isAuth={isAuth} component={Home} />}\n          />\n          <Route\n            path=\"/phonebook\"\n            element={<PrivateRoute isAuth={isAuth} component={Phonebook} />}\n          />\n          <Route\n            path=\"/login\"\n            isAuth={isAuth}\n            element={<PublicRoute component={Login} />}\n          />\n          <Route\n            path=\"/register\"\n            element={<PublicRoute isAuth={isAuth} component={Register} />}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './app-phonebook-actions';\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  // contact: contactList,\n  filter,\n});\n","// import { createStore, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// export const store = createStore(\n//   phonebookReducer,\n//   composeWithDevTools(applyMiddleware()),\n// );\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\nimport { configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// import { phonebookReducer } from './app/app-phonebook-reducer';\nimport { contactsApi } from './app/operation';\nimport filter from './app/app-phonebook-reducer';\n// const phonebookPersistConfig = {\n//   key: 'contact',\n//   storage,\n//   blacklist: ['filter'],\n// };\n// const persisteReducer = persistReducer(\n//   phonebookPersistConfig,\n//   phonebookReducer,\n// );\nexport const store = configureStore({\n  reducer: {\n    // contacts: phonebookReducer,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    getFilter: filter,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware(\n      {\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      },\n      //   ПЕРЕВІРИТИ ЧИ ВПЛИВАЄ НА ПЕРВІРКУ\n    )\n      // .concat(logger)\n      .concat(contactsApi.middleware),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nsetupListeners(store.dispatch);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n// import { store, persistor } from './redux/store';\nimport { store } from './redux/store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate loading={null} persistor={persistor}> */}\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <App />\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root'),\n// );\n"],"sourceRoot":""}