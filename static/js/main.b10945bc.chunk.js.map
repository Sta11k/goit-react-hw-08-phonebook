{"version":3,"sources":["components/Forms/Form.module.css","pages/Register.module.css","components/Todolist/Todolist.module.css","components/Filter/Filter.module.css","redux/app/operation.js","components/Forms/Form.js","redux/app/app-phonebook-selector.js","components/Todolist/Todolist.js","redux/app/app-phonebook-actions.js","components/Filter/Filter.js","pages/Phonebook.js","pages/Home.js","pages/Login.js","pages/Register.js","routs/PublicRout.js","routs/PrivateRout.js","App.js","redux/app/slices-auth.js","redux/app/app-phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","fetchContact","query","providesTags","result","map","type","id","addContacts","mutation","newContact","url","method","body","invalidatesTags","deleteContacts","useFetchContactQuery","useAddContactsMutation","useDeleteContactsMutation","Form","contact","useState","name","setName","number","setNumber","association","setAssociation","onSubmit","e","preventDefault","repeatName","reduce","acc","cont","repeatNumber","phone","includes","alert","className","s","m","title","form__name","onChange","currentTarget","value","pattern","required","form__number","radio__btn","checked","getFilter","state","filter","Todolist","isDeleting","isLoading","useSelector","contasts","setContacts","useEffect","optimizedFilter","toLowerCase","error","contacts__list","item","name__contact","btn","onClick","changeFilter","createAction","Filter","dispatch","useDispatch","label","input","event","target","Phonebook","contactApi","data","Home","Login","Register","email","password","register__list","gister__item","register__label","placeholder","PublicRoute","isAuth","Component","component","to","PrivateRoute","App","path","element","authSlice","createSlice","initialState","user","token","myProp","reducers","renameProp","action","payload","extraReducers","actions","createReducer","_","combineReducers","store","configureStore","reducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b10945bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__23lBI\",\"title\":\"Form_title__2hx0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register__list\":\"Register_register__list__16w9X\",\"register__label\":\"Register_register__label__9MJPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"Todolist_contacts__list__31jDS\",\"item\":\"Todolist_item__2tetk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1xDnt\",\"input\":\"Filter_input__3vyXT\"};","// import axios from 'axios';\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import { setupListeners } from '@reduxjs/toolkit/query';\r\n// import { phonebookReducer } from './app-phonebook-reducer';\r\n\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n// import {\r\n//   getContactsRequest,\r\n//   getContactsSuccess,\r\n//   getContactsError,\r\n//   addContactsRequest,\r\n//   addContactsSuccess,\r\n//   addContactsError,\r\n//   deleteContactsRequest,\r\n//   deleteontactsSuccess,\r\n//   deleteContactsError,\r\n// } from './operatin';\r\n\r\n// axios.get('https://61935e66d3ae6d0017da850e.mockapi.io/contacts');\r\n\r\n//youtu.be/xJ2cgRkR8D0?t=4941\r\n//redux-toolkit.js.org/rtk-query/api/createApi\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  tagTypes: ['Contacts'],\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61935e66d3ae6d0017da850e.mockapi.io/',\r\n  }),\r\n  endpoints: builder => ({\r\n    fetchContact: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: result =>\r\n        result\r\n          ? [\r\n              ...result.map(({ id }) => ({ type: 'Contacts', id })),\r\n              { type: 'Contacts', id: 'LIST' },\r\n            ]\r\n          : [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n    addContacts: builder.mutation({\r\n      query: newContact => ({\r\n        url: `/contacts`,\r\n        method: 'POST',\r\n        body: { ...newContact },\r\n      }),\r\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n    deleteContacts: builder.mutation({\r\n      query: id => ({\r\n        url: `contacts/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactQuery,\r\n  useAddContactsMutation,\r\n  useDeleteContactsMutation,\r\n} = contactsApi;\r\n","import { useState } from 'react';\r\nimport s from './Form.module.css';\r\nimport { useAddContactsMutation } from '../../redux/app/operation';\r\n\r\nfunction Form({ contact }) {\r\n  const [addContacts] = useAddContactsMutation();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [association, setAssociation] = useState('Other');\r\n\r\n  const handleSabmit = e => {\r\n    e.preventDefault();\r\n\r\n    const repeatName = contact.reduce((acc, cont) => [...acc, cont.name], []);\r\n    const repeatNumber = contact.reduce(\r\n      (acc, cont) => [...acc, cont.phone],\r\n      [],\r\n    );\r\n\r\n    if (repeatName.includes(name) || repeatNumber.includes(number)) {\r\n      alert(`${name}  ${number} is already `);\r\n      return;\r\n    }\r\n\r\n    if (repeatName.includes(name)) {\r\n      alert(`${name}  is already `);\r\n      return;\r\n    }\r\n    if (name === '' || number === '') {\r\n      alert(`Enter data`);\r\n      return;\r\n    }\r\n    let phone = number;\r\n    const newContact = { name, phone, association };\r\n    addContacts(newContact);\r\n    // onSubmit(name, number, association);\r\n    setName('');\r\n    setNumber('');\r\n    setAssociation('Other');\r\n    //Дизпачим продукет в редакс\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSabmit} className={s.m}>\r\n      <h2 className={s.title}>Phonebook</h2>\r\n      <label className={s.form__name}>\r\n        Name\r\n        <input\r\n          // id={this.contactIdName}\r\n          onChange={e => setName(e.currentTarget.value)}\r\n          type=\"text\"\r\n          value={name}\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.form__number}>\r\n        Number\r\n        <input\r\n          // id={this.contactIdNumber}\r\n          onChange={e => setNumber(e.currentTarget.value)}\r\n          type=\"tel\"\r\n          value={number}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <div className={s.radio__btn}>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"association\"\r\n            value=\"Work\"\r\n            onChange={e => setAssociation(e.currentTarget.value)}\r\n            checked={association === 'Work'}\r\n          />\r\n          Work\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"association\"\r\n            value=\"Family\"\r\n            onChange={e => setAssociation(e.currentTarget.value)}\r\n            checked={association === 'Family'}\r\n          />\r\n          Family\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"association\"\r\n            value=\"Friends\"\r\n            onChange={e => setAssociation(e.currentTarget.value)}\r\n            checked={association === 'Friends'}\r\n          />\r\n          Friends\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"association\"\r\n            value=\"Other\"\r\n            onChange={e => setAssociation(e.currentTarget.value)}\r\n            checked={association === 'Other'}\r\n          />\r\n          Other\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Add contacts</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","// export const getContacts = state => state.contacts.contact;\r\nexport const getFilter = state => state.getFilter.filter;\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const optimizedFilter = filter.toLowerCase();\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(optimizedFilter),\r\n//   );\r\n// };\r\n","import s from './Todolist.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getFilter } from '../../redux/app/app-phonebook-selector';\r\nimport { useDeleteContactsMutation } from '../../redux/app/operation';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Todolist({ contact }) {\r\n  const [deleteContacts, { isLoading: isDeleting }] =\r\n    useDeleteContactsMutation();\r\n  const value = useSelector(getFilter);\r\n  const [contasts, setContacts] = useState([]);\r\n  useEffect(() => {\r\n    const optimizedFilter = value.toLowerCase();\r\n    try {\r\n      setContacts(\r\n        contact.filter(({ name }) =>\r\n          name.toLowerCase().includes(optimizedFilter),\r\n        ),\r\n      );\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }, [contact, value]);\r\n\r\n  return (\r\n    <ul className={s.contacts__list}>\r\n      {contasts.map(({ id, name, phone, association }) => {\r\n        return (\r\n          <li key={id} className={s.item}>\r\n            {' '}\r\n            <p className={s.name__contact}>\r\n              Association: {association} | <span> name: {name} | </span>\r\n              <span>number: {phone} |</span>\r\n            </p>\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              onClick={() => deleteContacts(id)}\r\n            >\r\n              {' '}\r\n              {isDeleting ? 'Deleting...' : 'Delete'}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nexport default Todolist;\r\n\r\n// Todolist.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     }),\r\n//   ),\r\n//   onDeleteContact: PropTypes.func.isRequired,\r\n// };\r\n\r\n// const mapStateToProps = state => {\r\n//   const { filter } = state;\r\n//   const optimizedFilter = filter.toLowerCase();\r\n//   const vizibleCOntacts = state.contact.filter(contact =>\r\n//     contact.name.toLowerCase().includes(optimizedFilter),\r\n//   );\r\n\r\n//   return { contactsOll: vizibleCOntacts };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onDeleteContact: id => dispatch(deleteContacts(id)),\r\n//   };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Todolist);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('filter/value');\r\n","// import { connect } from 'react-redux';\r\nimport s from './Filter.module.css';\r\n// import PropTypes from 'prop-types';\r\nimport { changeFilter } from '../../redux/app/app-phonebook-actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getFilter } from '../../redux/app/app-phonebook-selector';\r\nfunction Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n  const onChange = event => dispatch(changeFilter(event.target.value));\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","// import { Component } from 'react';\r\nimport Form from '../components/Forms/Form';\r\nimport TodoList from '../components/Todolist/Todolist';\r\nimport Filter from '../components/Filter/Filter';\r\nimport { useFetchContactQuery } from '../redux/app/operation';\r\n\r\nfunction Phonebook() {\r\n  const { data: contactApi } = useFetchContactQuery();\r\n  return (\r\n    <div>\r\n      <Form contact={contactApi} />\r\n      <Filter contact={contactApi} />\r\n      {/* <TodoList contact={contactApi} /> */}\r\n      {contactApi && <TodoList contact={contactApi} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n","export function Home() {\r\n  return (\r\n    <>\r\n      <h2>HOMPAGE</h2>\r\n    </>\r\n  );\r\n}\r\n","// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { loginThunk } from '../redux/thunks';\nexport function Login() {\n  return (\n    <>\n      <h2>Login Form</h2>\n    </>\n  );\n}\n\n//   \"email\": \"across@mail.com\",\n//   \"password\": \"examplepassword\"\n","import { useState } from 'react';\nimport s from './Register.module.css';\n// import { useDispatch } from 'react-redux';\n// import { registerThunk } from '../redux/thunks';\nexport function Register() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // const  dispatch = useDispatch();\n\n  //   const dispatch = useDispatch();\n  //   const handleChange = e => {\n  //     switch (e.target.name) {\n  //       case 'name':\n  //         setName(e.target.value);\n  //         break;\n  //       case 'email':\n  //         setEmail(e.target.value);\n  //         break;\n  //       case 'password':\n  //         setPassword(e.target.value);\n  //         break;\n  //       default:\n  //         alert(`Check input name please`);\n  //     }\n  //   };\n  //   const handlSubmit = e => {\n  //     e.preventDefault();\n  //     const user = { name, email, password };\n  //     dispatch(registerThunk(user));\n  //     reset();\n  //   };\n  //   const reset = () => {\n  //     setName('');\n  //     setEmail('');\n  //     setPassword('');\n  //   };\n\n  return (\n    <>\n      <h2>Register Form</h2>\n      <form className=\"register\">\n        <ul className={s.register__list}>\n          <li className={s.gister__item}>\n            <label className={s.register__label}>\n              Name\n              <input type=\"text\" name=\"name\" value={name} placeholder=\"name\" />\n            </label>\n          </li>\n\n          <li className=\"register__item\">\n            <label className={s.register__label}>\n              Email\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                placeholder=\"email\"\n              />\n            </label>\n          </li>\n          <li className=\"register__item\">\n            <label className={s.register__label}>\n              {' '}\n              Password\n              <input\n                type=\"text\"\n                name=\"password\"\n                value={password}\n                placeholder=\"password\"\n              />\n            </label>\n          </li>\n        </ul>\n        <button type=\"submit\">add</button>\n      </form>\n\n      {/* <form onSubmit={handlSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"name\"\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          type=\"mail\"\n          name=\"email\"\n          value={email}\n          placeholder=\"email\"\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={handleChange}\n        />\n        <br />\n        <button type=\"submit\">add</button>\n      </form> */}\n    </>\n  );\n}\n// \"name\": \"Adrian Cross\",\n//   \"email\": \"across@mail.com\",\n//   \"password\": \"examplepassword\"\n","import { Navigate } from 'react-router-dom';\nexport function PublicRoute({ isAuth, component: Component }) {\n  return (\n    <>\n      <h1> PublicRoute</h1>\n      {isAuth ? <Navigate to=\"/\" /> : <Component />}\n      {/* {isAuth? </Navigate> :<Component/>} */}\n      {/* <Component /> */}\n    </>\n  );\n}\n","import { Navigate } from 'react-router-dom';\n\nexport function PrivateRoute({ isAuth, component: Component }) {\n  return (\n    <>\n      <h1> PrivateRoute</h1>\n      {isAuth ? <Component /> : <Navigate to=\"/login\" />}\n      {/* <Component /> */}\n    </>\n  );\n}\n","// import { Component } from 'react';\r\nimport { Link, Routes, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Phonebook from './pages/Phonebook';\r\nimport { Home } from './pages/Home';\r\nimport { Login } from './pages/Login';\r\nimport { Register } from './pages/Register';\r\nimport { PublicRoute } from './routs/PublicRout';\r\nimport { PrivateRoute } from './routs/PrivateRout';\r\nconst isAuth = false;\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/phonebook\">Phonebook</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/login\">Login</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/register\">Register</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={<PrivateRoute isAuth={isAuth} component={Home} />}\r\n          />\r\n          <Route\r\n            path=\"/phonebook\"\r\n            element={<PrivateRoute isAuth={isAuth} component={Phonebook} />}\r\n          />\r\n          <Route\r\n            path=\"/login\"\r\n            isAuth={isAuth}\r\n            element={<PublicRoute component={Login} />}\r\n          />\r\n          <Route\r\n            path=\"/register\"\r\n            element={<PublicRoute isAuth={isAuth} component={Register} />}\r\n          />\r\n        </Routes>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: { name: '', email: '' },\n    token: '',\n    error: null,\n    isLoading: false,\n    isAuth: false,\n    myProp: 'Test',\n  },\n  reducers: {\n    renameProp: (state, action) => {\n      return {\n        ...state,\n        myProp: action.payload,\n      };\n    },\n  },\n\n  extraReducers: {},\n});\n\nexport const {} = authSlice.actions;\nexport default authSlice.reducer;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './app-phonebook-actions';\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  // contact: contactList,\r\n  filter,\r\n});\r\n","// import { createStore, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// export const store = createStore(\n//   phonebookReducer,\n//   composeWithDevTools(applyMiddleware()),\n// );\n\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './app/slices-auth';\n// import logger from 'redux-logger';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// import { phonebookReducer } from './app/app-phonebook-reducer';\nimport { contactsApi } from './app/operation';\nimport filter from './app/app-phonebook-reducer';\n// const phonebookPersistConfig = {\n//   key: 'contact',\n//   storage,\n//   blacklist: ['filter'],\n// };\n// const persisteReducer = persistReducer(\n//   phonebookPersistConfig,\n//   phonebookReducer,\n// );\nexport const store = configureStore({\n  reducer: {\n    // contacts: phonebookReducer,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    auth: authReducer,\n    getFilter: filter,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware(\n      {\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      },\n      //   ПЕРЕВІРИТИ ЧИ ВПЛИВАЄ НА ПЕРВІРКУ\n    )\n      // .concat(logger)\n      .concat(contactsApi.middleware),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nsetupListeners(store.dispatch);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n// import { store, persistor } from './redux/store';\r\nimport { store } from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <PersistGate loading={null} persistor={persistor}> */}\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n    {/* </PersistGate> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root'),\r\n// );\r\n"],"sourceRoot":""}